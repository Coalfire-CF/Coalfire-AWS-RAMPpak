---
- name: Load AWS vars
  ansible.builtin.include_vars: aws.yml
  when: ansible_system_vendor == 'Amazon EC2'

- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Create CSV from Template
  ansible.builtin.template:
    src: os_and_apps.csv.j2
    dest: "/tmp/os_and_apps_linux_{{ ansible_date_time.iso8601 }}.csv"
    force: true
    mode: "0600"
  delegate_to: localhost
  run_once: true

- name: Create Linux Folder in S3
  amazon.aws.s3_object:
    aws_config:
      s3:
        addressing_style: virtual
    bucket: "{{ audit_bucket_name }}"
    object: "/linux/os_and_apps"
    mode: create
    region: "{{ aws_region }}"
    endpoint_url: "https://s3-fips.{{ aws_region }}.amazonaws.com"
    permission: []
  when: ansible_system_vendor == 'Amazon EC2'
  delegate_to: localhost
  run_once: true

- name: Upload CSV to S3
  amazon.aws.s3_object:
    aws_config:
      s3:
        addressing_style: virtual
    bucket: "{{ audit_bucket_name }}"
    object: "/linux/os_and_apps/os_and_apps_linux_{{ ansible_date_time.iso8601 }}.csv"
    src: "/tmp/os_and_apps_linux_{{ ansible_date_time.iso8601 }}.csv"
    mode: put
    overwrite: latest # "different" uses MD5 which is disabled in FIPS mode
    region: "{{ aws_region }}"
    endpoint_url: "https://s3-fips.{{ aws_region }}.amazonaws.com"
    encryption_kms_key_id: "{{ s3_key_id }}"
    encrypt: true
    encryption_mode: aws:kms
    permission: []
  when: ansible_system_vendor == 'Amazon EC2'
  delegate_to: localhost
  run_once: true

- name: Remove Temp CSV
  ansible.builtin.file:
    path: "/tmp/os_and_apps_linux_{{ ansible_date_time.iso8601 }}.csv"
    state: absent
  delegate_to: localhost
  run_once: true
