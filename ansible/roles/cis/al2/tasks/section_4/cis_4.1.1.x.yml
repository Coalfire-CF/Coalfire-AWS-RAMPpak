---
- name: "4.1.1.1 | PATCH | Ensure auditd is installed"
  package:
      name: ['audit', 'audit-libs']
      state: present
  notify: restart auditd
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - amazon2cis_rule_4_1_1_1
  tags:
      - level2
      - automated
      - patch
      - rule_4.1.1.1
      - auditd

- name: "4.1.1.2 | PATCH | Ensure auditd service is enabled and running"
  service:
      name: auditd
      state: started
      enabled: true
  when:
      - not amazon2cis_skip_for_travis
      - amazon2cis_rule_4_1_1_2
      - ansible_connection != 'docker'
  tags:
      - level2
      - automated
      - patch
      - rule_4.1.1.2
      - auditd

- name: "4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled"
  block:
      - name: "4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled | Get Grub CMDLINE Settings"
        shell: grep GRUB_CMDLINE_LINUX= /etc/default/grub | cut -d'"' -f2
        changed_when: false
        failed_when: false
        register: amazon2cis_4_1_1_3_grub_cmdline_linux

      - name: "4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled | Set if audit setting already set"
        replace:
            path: /etc/default/grub
            regexp: 'audit=([^\D]+)'
            replace: 'audit=1'
        notify: grub2cfg
        when: "'audit=' in amazon2cis_4_1_1_3_grub_cmdline_linux.stdout"

      - name: "4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled | Set if audit setting not already set"
        lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX='
            line: 'GRUB_CMDLINE_LINUX="{{ amazon2cis_4_1_1_3_grub_cmdline_linux.stdout }} audit=1"'
        notify: grub2cfg
        when: "'audit=' not in amazon2cis_4_1_1_3_grub_cmdline_linux.stdout"
  when:
      - amazon2cis_rule_4_1_1_3
  tags:
      - level2
      - automated
      - patch
      - rule_4.1.1.3
      - auditd
