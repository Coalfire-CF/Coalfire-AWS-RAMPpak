---

- name: "6.1.1 | PATCH | Audit system file permissions"
  block:
      - name: "6.1.1 | AUDIT | Audit system file permissions | Audit the packages"
        shell: rpm -Va --nomtime --nosize --nomd5 --nolinkto
        changed_when: false
        failed_when: false
        register: amazon2cis_6_1_1_packages_rpm
        tags:
            - skip_ansible_lint

      - name: "6.1.1 | AUDIT | Audit system file permissions | Add file discrepancy list to system"
        copy:
            dest: "{{ amazon2cis_rpm_audit_file }}"
            content: "{{ amazon2cis_6_1_1_packages_rpm.stdout }}"
        changed_when: amazon2cis_6_1_1_packages_rpm.stdout|length > 0

      - name: "6.1.1 | AUDIT | Audit system file permissions | Message out alert for package descrepancies"
        debug:
            msg:
                - Warning! You have some package descrepancies issues.
                - "The file list can be found in {{ amazon2cis_rpm_audit_file }}"
        when: amazon2cis_6_1_1_packages_rpm.stdout|length > 0

      - name: "6.1.1 | AUDIT | Audit system file permissions | Message out no package descrepancies"
        debug:
            msg: "Good News! There are no package descrepancies"
        when: amazon2cis_6_1_1_packages_rpm.stdout|length == 0
  when:
      - amazon2cis_rule_6_1_1
  tags:
      - level2
      - manual
      - patch
      - rule_6.1.1
      - permissions

- name: "6.1.2 | PATCH | Ensure permissions on /etc/passwd are configured"
  file:
      path: /etc/passwd
      owner: root
      group: root
      mode: 0644
  when:
      - amazon2cis_rule_6_1_2
  tags:
      - level1
      - automated
      - patch
      - rule_6.1.2
      - permissions

- name: "6.1.3 | PATCH | Ensure permissions on /etc/passwd- are configured"
  file:
      path: /etc/passwd-
      owner: root
      group: root
      mode: 0644
  when:
      - amazon2cis_rule_6_1_3
  tags:
      - level1
      - automated
      - patch
      - rule_6.1.3
      - permissions

- name: "6.1.4 | PATCH | Ensure permissions on /etc/shadow are configured"
  file:
      path: /etc/shadow
      owner: root
      group: root
      mode: 0000
  when:
      - amazon2cis_rule_6_1_4
  tags:
      - level1
      - automated
      - patch
      - rule_6.1.4
      - permissions

- name: "6.1.5 | PATCH | Ensure permissions on /etc/shadow- are configured"
  file:
      path: /etc/shadow-
      owner: root
      group: root
      mode: 0000
  when:
      - amazon2cis_rule_6_1_5
  tags:
      - level1
      - automated
      - patch
      - rule_6.1.5
      - permissions

- name: "6.1.6 | PATCH | Ensure permissions on /etc/gshadow- are configured"
  file:
      path: /etc/gshadow-
      owner: root
      group: root
      mode: 0000
  when:
      - amazon2cis_rule_6_1_6
  tags:
      - level1
      - automated
      - patch
      - rule_6.1.6
      - permissions

- name: "6.1.7 | PATCH | Ensure permissions on /etc/gshadow are configured"
  file:
      path: /etc/gshadow
      owner: root
      group: root
      mode: 0000
  when:
      - amazon2cis_rule_6_1_7
  tags:
      - level1
      - automated
      - patch
      - rule_6.1.7
      - permissions

- name: "6.1.8 | PATCH | Ensure permissions on /etc/group are configured"
  file:
      path: /etc/group
      owner: root
      group: root
      mode: 0644
  when:
      - amazon2cis_rule_6_1_8
  tags:
      - level1
      - automated
      - patch
      - rule_6.1.8
      - permissions

- name: "6.1.9 | PATCH | Ensure permissions on /etc/group- are configured"
  file:
      path: /etc/group-
      owner: root
      group: root
      mode: 0644
  when:
      - amazon2cis_rule_6_1_9
  tags:
      - level1
      - automated
      - patch
      - rule_6.1.9
      - permissions

- name: "6.1.10 | PATCH | Ensure no world writable files exist"
  block:
      - name: "6.1.10 | AUDIT | Ensure no world writable files exist | Get list of world-writable files"
        shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002
        changed_when: false
        failed_when: false
        register: amazon2_6_1_10_perms_results

      - name: "6.1.10 | AUDIT | Ensure no world writable files exist | Alert no world-writable files exist"
        debug:
            msg: "Good news! We have not found any world-writable files on your system"
        when: amazon2_6_1_10_perms_results.stdout is not defined

      - name: "6.1.10 | PATCH | Ensure no world writable files exist | Adjust world-writable files if they exist (Configurable)"
        file:
            path: '{{ item }}'
            mode: o-w
            state: touch
        with_items:
            - "{{ amazon2_6_1_10_perms_results.stdout_lines }}"
        when:
            - amazon2_6_1_10_perms_results.stdout_lines is defined
            - amazon2cis_no_world_write_adjust
  when:
      - amazon2cis_rule_6_1_10
  tags:
      - level1
      - automated
      - patch
      - rule_6.1.10
      - permissions

- name: "6.1.11 | PATCH | Ensure no unowned files or directories exist"
  block:
      - name: "6.1.11 | AUDIT | Ensure no unowned files or directories exist | Finding all unowned files or directories"
        command: find "{{ item.mount }}" -xdev -nouser
        changed_when: false
        failed_when: false
        check_mode: false
        register: amazon2_6_1_11_audit
        with_items:
            - "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"
        when: item['device'].startswith('/dev') and not 'bind' in item['options']

      - name: "6.1.11 | AUDIT | Ensure no unowned files or directories exist | Displaying any unowned files or directories"
        debug:
            msg: "Warning - Manual intervention is required -- missing owner on items in {{ item.item.mount }}: {{ item.stdout_lines | join(', ') }}"
        when:
            - item.stdout_lines is defined
            - item.stdout_lines | length > 0
        with_items:
            - "{{ amazon2_6_1_11_audit.results }}"
  when:
      - amazon2cis_rule_6_1_11
  tags:
      - level1
      - automated
      - patch
      - rule_6.1.11
      - permissions

- name: "6.1.12 | PATCH | Ensure no ungrouped files or directories exist"
  block:
      - name: "6.1.12 | AUDIT | Ensure no ungrouped files or directories exist | Finding all ungrouped files or directories"
        command: find "{{ item.mount }}" -xdev -nogroup
        changed_when: false
        failed_when: false
        check_mode: false
        register: amazon2_6_1_12_audit
        with_items:
            - "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"
        when: item['device'].startswith('/dev') and not 'bind' in item['options']

      - name: "6.1.12 | AUDIT | Ensure no ungrouped files or directories exist | Displaying all ungrouped files or directories"
        debug:
            msg: "Warning - Manual intervention is required -- missing group on items in {{ item }}!"
        with_items:
            - "{{ amazon2_6_1_12_audit.results | map(attribute='stdout_lines') }}"
        when: item | length > 0
  when:
      - amazon2cis_rule_6_1_12
  tags:
      - level1
      - automated
      - patch
      - rule_6.1.12
      - permissions

- name: "6.1.13 | PATCH | Audit SUID executables"
  block:
      - name: "6.1.13 | AUDIT | Audit SUID executables | Find all SUID executables"
        shell: df {{ item.mount }} -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -4000
        changed_when: false
        failed_when: false
        register: amazon2_6_1_13_perms_results
        with_items:
            - "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"

      - name: "6.1.13 | AUDIT | Audit SUID executables |  Alert no SUID executables exist"
        debug:
            msg: "Good news! We have not found any SUID executable files on your system"
        when: amazon2_6_1_13_perms_results.stdout is not defined

      - name: "6.1.13 | AUDIT | Audit SUID executables |  Alert SUID executables exist"
        debug:
            msg: "Warning - Manual intervention is required -- SUID set on items in {{ item.item.mount }}: {{ item.stout_lines | join(', ') }}"
        with_items: "{{ amazon2_6_1_13_perms_results.stdout_lines }}"
        when: amazon2_6_1_13_perms_results.stdout is defined
  when:
      - amazon2cis_rule_6_1_13
  tags:
      - level1
      - manual
      - audit
      - rule_6.1.13
      - permissions

- name: "6.1.14 | PATCH | Audit SGID executables"
  block:
      - name: "6.1.14 | AUDIT | Audit SGID executables | Find all SGID executables"
        shell: df {{ item.mount }} -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -2000
        changed_when: false
        failed_when: false
        register: amazon2_6_1_14_perms_results
        with_items:
            - "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"

      - name: "6.1.14 | AUDIT | Audit SGID executables |  Alert no SGID executables exist"
        debug:
            msg: "Good news! We have not found any SGID executable files on your system"
        when: amazon2_6_1_14_perms_results.stdout is not defined

      - name: "6.1.14 | AUDIT | Audit SGID executables |  Alert SGID executables exist"
        debug:
            msg: "Warning - Manual intervention is required -- SGID set on items in {{ item.item.mount }}: {{ item.stout_lines | join(', ') }}"
        with_items:
            - "{{ amazon2_6_1_14_perms_results.stdout_lines }}"
        when: amazon2_6_1_14_perms_results.stdout is defined
  when:
      - amazon2cis_rule_6_1_14
  tags:
      - level1
      - manual
      - patch
      - rule_6.1.14
      - permissions
