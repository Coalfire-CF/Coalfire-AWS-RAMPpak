---
- name: "AUTOMATED | 5.4.1 | PATCH | Ensure password creation requirements are configured"
  block:
      - name: "AUTOMATED | 5.4.1 | PATCH | Ensure password creation requirements are configured | Install pam_pwquality module"
        apt:
            name: libpam-pwquality
            state: present

      - name: "AUTOMATED | 5.4.1 | PATCH | Ensure password creation requirements are configured | Add minlen"
        lineinfile:
            path: /etc/security/pwquality.conf
            regexp: '^minlen|^# minlen'
            line: minlen = 14

      - name: "AUTOMATED | 5.4.1 | PATCH | Ensure password creation requirements are configured | Add minclass"
        lineinfile:
            path: /etc/security/pwquality.conf
            regexp: '^minclass|^# minclass'
            line: 'minclass = 4'

      - name: "AUTOMATED | 5.4.1 | AUDIT | Ensure password creation requirements are configured | Confirm pwquality module in common-password"
        command: grep 'password.*requisite.*pam_pwquality.so' /etc/pam.d/common-password
        changed_when: false
        failed_when: false
        register: ubtu18cis_5_4_1_pam_pwquality_state

      - name: "AUTOMATED | 5.4.1 | PATCH | Ensure password creation requirements are configured | Set retry to 3 if pwquality exists"
        pamd:
            name: common-password
            type: password
            control: requisite
            module_path: pam_pwquality.so
            module_arguments: 'retry=3'
            state: args_present
        when: ubtu18cis_5_4_1_pam_pwquality_state.stdout | length > 0

      - name: "AUTOMATED | 5.4.1 | PATCH | Ensure password creation requirements are configured | Set retry to 3 if pwquality does not exist"
        pamd:
            name: common-password
            type: password
            control: required
            module_path: pam_permit.so
            new_type: password
            new_control: requisite
            new_module_path: pam_pwquality.so
            module_arguments: 'retry=3'
            state: after
        when: ubtu18cis_5_4_1_pam_pwquality_state.stdout | length == 0
  when:
      - ubtu18cis_rule_5_4_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_5.4.1
      - pam

# -------------
# -------------
# There is a bug in pam_tally2.so where the use of the audit keyword may log credentials in the case of user error during authentication.
# To work around this bug the CIS documentation has you setting pam_tally2 to the account section.
# Once bug is fixed please set pam_tally2 to the auth sections. We have those commented out in the task
# -------------
# -------------

# -------------
# -------------
# figure out why pam_deny kills vagrant user
# -------------
# -------------
- name: "AUTOMATED | 5.4.2 | PATCH | Ensure lockout for failed password attempts is configured"
  block:
      - name: "AUTOMATED | 5.4.2 | AUDIT | Ensure lockout for failed password attempts is configured | Confirm pam_tally2.so module in common-password"
        command: grep 'auth.*required.*pam_tally2.so' /etc/pam.d/common-auth
        changed_when: false
        failed_when: false
        register: ubtu18cis_5_4_2_pam_tally2_state

      - name: "AUTOMATED | 5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Set pam_tally2.so settings if exists"
        pamd:
            name: common-auth
            type: auth
            control: required
            module_path: pam_tally2.so
            module_arguments: 'onerr=fail
                audit
                silent
                deny=5
                unlock_time=900'
        when: ubtu18cis_5_4_2_pam_tally2_state.stdout | length > 0

      - name: "AUTOMATED | 5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Set pam_tally2.so settings if does not exist"
        lineinfile:
            path: /etc/pam.d/common-auth
            line: 'auth required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900'
            insertafter: '^# end of pam-auth-update config'
        when: ubtu18cis_5_4_2_pam_tally2_state.stdout | length == 0

      - name: "AUTOMATED | 5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Set pam_deny.so and pam_tally2.so"
        lineinfile:
            path: /etc/pam.d/common-account
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: '^# end of pam-auth-update config'
        with_items:
            - { regexp: '^account.*required.*pam_tally2.so', line: 'account required                        pam_tally2.so' }
  when:
      - ubtu18cis_rule_5_4_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_5.4.2
      - pamd

- name: "AUTOMATED | 5.4.3 | PATCH | Ensure password reuse is limited"
  block:
      - name: "AUTOMATED | 5.4.3 | AUDIT | Ensure password reuse is limited | Confirm pam_pwhistory.so in common-password"
        command: grep 'password.*required.*pam_pwhistory.so' /etc/pam.d/common-password
        changed_when: false
        failed_when: false
        register: ubtu18cis_5_4_3_pam_pwhistory_state

      - name: "AUTOMATED | 5.4.3 | PATCH | Ensure password reuse is limited | Set remember value if pam_pwhistory exists"
        pamd:
            name: common-password
            type: password
            control: required
            module_path: pam_pwhistory.so
            module_arguments: 'remember={{ ubtu18cis_pamd_pwhistory_remember }}'
            state: args_present
        when: ubtu18cis_5_4_3_pam_pwhistory_state.stdout | length > 0

      - name: "AUTOMATED | 5.4.3 | PATCH | Ensure password reuse is limited | Set remember value if pam_pwhistory does no exist"
        lineinfile:
            path: /etc/pam.d/common-password
            line: 'password        required                        pam_pwhistory.so remember={{ ubtu18cis_pamd_pwhistory_remember }}'
            insertbefore: 'pam_unix.so'
        when: ubtu18cis_5_4_3_pam_pwhistory_state.stdout | length == 0
  when:
      - ubtu18cis_rule_5_4_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_5.4.3
      - pamd

- name: "AUTOMATED | 5.4.4 | PATCH | Ensure password hashing algorithm is SHA-512"
  block:
      - name: "AUTOMATED | 5.4.4 | PATCH | Ensure password hashing algorithm is SHA-512 | Confirm pam_unix.so"
        shell: grep -E '^\s*password\s+(\S+\s+)+pam_unix\.so\s+(\S+\s+)*sha512\s*(\S+\s*)*(\s+#.*)?$' /etc/pam.d/common-password
        changed_when: false
        failed_when: false
        register: ubtu18cis_5_4_4_pam_unix_state

      - name: "AUTOMATED | 5.4.4 | PATCH | Ensure password hashing algorithm is SHA-512 | Set hashing if pam_unix.so exists"
        pamd:
            name: common-password
            type: password
            control: '[success=1 default=ignore]'
            module_path: pam_unix.so
            module_arguments: sha512
            state: args_present
        when: ubtu18cis_5_4_4_pam_unix_state.stdout | length > 0

      - name: "AUTOMATED | 5.4.4 | PATCH | Ensure password hashing algorithm is SHA-512 | Set hashing if pam_unix.so does not exist"
        lineinfile:
            path: /etc/pam.d/common-password
            line: 'password        [success=1 default=ignore]      pam_unix.so sha512'
            insertbefore: '^# end of pam-auth-update config'
        when: ubtu18cis_5_4_4_pam_unix_state.stdout | length == 0
  when:
      - ubtu18cis_rule_5_4_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_5.4.4
      - pamd
