---
- name: "AUTOMATED | 5.5.1.1 | PATCH | Ensure minimum days between password changes is configured"
  block:
      - name: "AUTOMATED | 5.5.1.1 | PATCH | Ensure minimum days between password changes is configured | Set /etc/login.defs PASS_MIN_DAYS"
        lineinfile:
            path: /etc/login.defs
            regexp: '^PASS_MIN_DAYS|^#PASS_MIN_DAYS'
            line: 'PASS_MIN_DAYS {{ ubtu18cis_pass.min_days }}'

      - name: "AUTOMATED | 5.5.1.1 | PATCH | Ensure minimum days between password changes is configured | Set existing users PASS_MIN_DAYS"
        command: chage --mindays {{ ubtu18cis_pass.min_days }} {{ item }}
        failed_when: false
        with_items:
            - "{{ ubtu18cis_passwd| selectattr('uid', '>=', 1000) | map(attribute='id') | list }}"
        when: ubtu18cis_disruption_high
  when:
      - ubtu18cis_rule_5_5_1_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_5.5.1.1
      - user
      - login

- name: "AUTOMATED | 5.5.1.2 | PATCH | Ensure password expiration is 365 days or less"
  block:
      - name: "AUTOMATED | 5.5.1.2 | PATCH | Ensure password expiration is 365 days or less | Set /etc/login.defs PASS_MAX_DAYS"
        lineinfile:
            path: /etc/login.defs
            regexp: '^PASS_MAX_DAYS|^#PASS_MAX_DAYS'
            line: 'PASS_MAX_DAYS {{ ubtu18cis_pass.max_days }}'
            insertafter: '# Password aging controls'

      - name: "AUTOMATED | 5.5.1.2 | PATCH | Ensure password expiration is 365 days or less | Set existing users PASS_MAX_DAYS"
        command: chage --maxdays {{ ubtu18cis_pass.max_days }} {{ item }}
        failed_when: false
        with_items:
            - "{{ ubtu18cis_passwd| selectattr('uid', '>=', 1000) | map(attribute='id') | list }}"
        when: ubtu18cis_disruption_high
  when:
      - ubtu18cis_rule_5_5_1_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_5.5.1.2
      - user
      - login

- name: "AUTOMATED | 5.5.1.3 | PATCH | Ensure password expiration warning days is 7 or more"
  block:
      - name: "AUTOMATED | 5.5.1.3 | PATCH | Ensure password expiration warning days is 7 or more | Set /etc/login.defs PASS_WARN_AGE"
        lineinfile:
            path: /etc/login.defs
            regexp: '^PASS_WARN_AGE|^#PASS_WARN_AGE'
            line: 'PASS_WARN_AGE {{ ubtu18cis_pass.warn_age }}'

      - name: "AUTOMATED | 5.5.1.3 | PATCH | Ensure password expiration warning days is 7 or more | Set existing users PASS_WARN_AGE"
        command: chage --warndays {{ ubtu18cis_pass.warn_age }} {{ item }}
        failed_when: false
        with_items:
            - "{{ ubtu18cis_passwd| selectattr('uid', '>=', 1000) | map(attribute='id') | list }}"
        when: ubtu18cis_disruption_high
  when:
      - ubtu18cis_rule_5_5_1_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_5.5.1.3
      - user
      - login

- name: "AUTOMATED | 5.5.1.4 | PATCH | Ensure inactive password lock is 30 days or less"
  block:
      - name: "AUTOMATED | 5.5.1.4 | PATCH | Ensure inactive password lock is 30 days or less | Set inactive period for new users"
        command: useradd -D -f {{ ubtu18cis_pass.inactive }}
        failed_when: false

      - name: "AUTOMATED | 5.5.1.4 | PATCH | Ensure inactive password lock is 30 days or less | Set inactive period for existing users"
        command: chage --inactive {{ ubtu18cis_pass.inactive }} {{ item }}
        failed_when: false
        with_items:
            - "{{ ubtu18cis_passwd| selectattr('uid', '>=', 1000) | map(attribute='id') | list }}"
        when: ubtu18cis_disruption_high
  when:
      - ubtu18cis_rule_5_5_1_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_5.5.1.4
      - user
      - login

- name: "AUTOMATED | 5.5.1.5 | PATCH | Ensure all users last password change date is in the past"
  block:
      - name: "AUTOMATED | 5.5.1.5 | PATCH | Ensure all users last password change date is in the past | Get current date in Unix Time"
        shell: echo $(($(date --utc --date "$1" +%s)/86400))
        changed_when: false
        failed_when: false
        register: ubtu18cis_5_5_1_5_current_time

      - name: "AUTOMATED | 5.5.1.5 | PATCH | Ensure all users last password change date is in the past | Get list of users with last changed PW date in future"
        shell: "cat /etc/shadow | awk -F: '{if($3>{{ ubtu18cis_5_5_1_5_current_time.stdout }})print$1}'"
        changed_when: false
        failed_when: false
        register: ubtu18cis_5_5_1_5_user_list

      - name: "AUTOMATED | 5.5.1.5 | PATCH | Ensure all users last password change date is in the past | Warn about users"
        debug:
            msg:
                - "Warning!! The following accounts have the last PW change date in the future"
                - "{{ ubtu18cis_5_5_1_5_user_list.stdout_lines }}"
        when: ubtu18cis_5_5_1_5_user_list.stdout | length > 0

      - name: "AUTOMATED | 5.5.1.5 | PATCH | Ensure all users last password change date is in the past | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '5.5.1.5'
        when: ubtu18cis_5_5_1_5_user_list.stdout | length > 0

      - name: "AUTOMATED | 5.5.1.5 | PATCH | Ensure all users last password change date is in the past | Lock accounts with furtre PW changed dates"
        command: passwd --expire {{ item }}
        failed_when: false
        with_items:
            - "{{ ubtu18cis_5_5_1_5_user_list.stdout_lines }}"
        when:
            - ubtu18cis_disruption_high
            - ubtu18cis_5_5_1_5_user_list.stdout | length > 0
  when:
      - ubtu18cis_rule_5_5_1_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_5.5.1.5
      - user
      - login
