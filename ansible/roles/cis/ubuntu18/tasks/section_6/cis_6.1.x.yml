---
- name: "MANUAL | 6.1.1 | AUDIT | Audit system file permissions"
  block:
      - name: "MANUAL | 6.1.1 | AUDIT | Audit system file permissions | Register package list"
        command: dpkg-query -W -f='${binary:Package}\n'
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_1_1_packages

      - name: "MANUAL | 6.1.1 | AUDIT | Audit system file permissions | Audit the packages"
        shell: "dpkg --verify {{ item }}"
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_1_1_packages_audited
        with_items: "{{ ubtu18cis_6_1_1_packages.stdout_lines }}"
        when:
            - not ubtu18cis_manual_audit_dpkg

      - name: "MANUAL | 6.1.1 | AUDIT | Audit system file permissions | Merge Package Name And Stdout."
        set_fact:
            ubtu18cis_6_1_1_packages_issues: "{{ merged|default({}) | combine( {item.item: item.stdout} ) }}"
        with_items:
            - "{{ ubtu18cis_6_1_1_packages_audited.results }}"
        when:
            - item.stdout | length > 0
            - not ubtu18cis_manual_audit_dpkg

      - name: "MANUAL | 6.1.1 | AUDIT | Audit system file permissions | Audited Check Results."
        debug:
            msg:
                - "Warning!! The packages below may not have the correct file permissions."
                - "Please review the list below and make sure they conform to site policies."
                - "{{ ubtu18cis_6_1_1_packages_issues }}"
        when:
            - not ubtu18cis_manual_audit_dpkg

      - name: "MANUAL | 6.1.1 | AUDIT | Audit system file permissions | Message out packages results for review"
        debug:
            msg:
                - "Warning!! Below are the packages that need to be reviewed."
                - "You can run dpkg --verify <package name> and if nothing is returned the package is installed correctly"
                - "{{ ubtu18cis_6_1_1_packages.stdout_lines }}"
        when: ubtu18cis_manual_audit_dpkg

      - name: "MANUAL | 6.1.1 | AUDIT | Audit system file permissions | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.1.1'
  when:
      - ubtu18cis_rule_6_1_1
  tags:
      - level2-server
      - level2-workstation
      - manual
      - audit
      - rule_6.1.1
      - permissions

- name: "AUTOMATED | 6.1.2 | PATCH | Ensure permissions on /etc/passwd are configured"
  file:
      path: /etc/passwd
      owner: root
      group: root
      mode: 0644
  when:
      - ubtu18cis_rule_6_1_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_6.1.2
      - permissions

- name: "AUTOMATED | 6.1.3 | PATCH | Ensure permissions on /etc/passwd- are configured"
  file:
      path: /etc/passwd-
      owner: root
      group: root
      mode: 0600
  when:
      - ubtu18cis_rule_6_1_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_6.1.3
      - permissions

- name: "AUTOMATED | 6.1.4 | PATCH | Ensure permissions on /etc/group are configured"
  file:
      path: /etc/group
      owner: root
      group: root
      mode: 0644
  when:
      - ubtu18cis_rule_6_1_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_6.1.4
      - permissions

- name: "AUTOMATED | 6.1.5 | PATCH | Ensure permissions on /etc/group- are configured"
  file:
      path: /etc/group-
      owner: root
      group: root
      mode: 0644
  when:
      - ubtu18cis_rule_6_1_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_6.1.5
      - permissions

- name: "AUTOMATED | 6.1.6 | PATCH | Ensure permissions on /etc/shadow are configured"
  file:
      path: /etc/shadow
      owner: root
      group: shadow
      mode: 0640
  when:
      - ubtu18cis_rule_6_1_6
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_6.1.6
      - permissions

- name: "AUTOMATED | 6.1.7 | PATCH | Ensure permissions on /etc/shadow- are configured"
  file:
      path: /etc/shadow-
      owner: root
      group: shadow
      mode: 0600
  when:
      - ubtu18cis_rule_6_1_7
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_6.1.7
      - permissions

- name: "AUTOMATED | 6.1.8 | PATCH | Ensure permissions on /etc/gshadow are configured"
  file:
      path: /etc/gshadow
      owner: root
      group: shadow
      mode: 0640
  when:
      - ubtu18cis_rule_6_1_8
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_6.1.8
      - permissions

- name: "AUTOMATED | 6.1.9 | PATCH | Ensure permissions on /etc/gshadow- are configured"
  file:
      path: /etc/gshadow-
      owner: root
      group: shadow
      mode: 0640
  when:
      - ubtu18cis_rule_6_1_9
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_6.1.9
      - permissions

- name: "AUTOMATED | 6.1.10 | PATCH | Ensure no world writable files exist"
  block:
      - name: "AUTOMATED | 6.1.10 | PATCH | Ensure no world writable files exist | Get list of world-writable files"
        shell: find {{ item.mount }} -xdev -type f -perm -0002
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_1_10_wwf
        with_items:
            - "{{ ansible_mounts }}"

      - name: "AUTOMATED | 6.1.10 | PATCH | Ensure no world writable files exist | Adjust world-writable files if they exist"
        file:
            path: "{{ item }}"
            mode: o-w
        with_items:
            - "{{ ubtu18cis_6_1_10_wwf.results | map(attribute='stdout_lines') | flatten  }}"
        when: ubtu18cis_no_world_write_adjust
  when:
      - ubtu18cis_rule_6_1_10
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_6.1.10
      - permissions

- name: "AUTOMATED | 6.1.11 | PATCH | Ensure no unowned files or directories exist"
  block:
      - name: "AUTOMATED | 6.1.11 | AUDIT | Ensure no unowned files or directories exist | Get unowned files or directories"
        shell: find {{ item.mount }} -xdev -nouser
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_1_11_no_user_items
        with_items:
            - "{{ ansible_mounts }}"

      - name: "AUTOMATED | 6.1.11 | PATCH | Ensure no unowned files or directories exist | Flatten no_user_items results for easier use"
        set_fact:
            ubtu18cis_6_1_11_no_user_items_flatten: "{{ ubtu18cis_6_1_11_no_user_items.results | map(attribute='stdout_lines') | flatten }}"

      - name: "AUTOMATED | 6.1.11 | AUDIT | Ensure no unowned files or directories exist | Alert on unowned files and directories"
        debug:
            msg:
                - "Warning!! You have unowned files and are configured to not auto-remediate for this task"
                - "Please review the files/directories below and assign an owner"
                - "{{ ubtu18cis_6_1_11_no_user_items_flatten }}"
        when:
            - not ubtu18cis_no_owner_adjust
            - ubtu18cis_6_1_11_no_user_items_flatten | length > 0

      - name: "AUTOMATED | 6.1.11 | AUDIT | Ensure no unowned files or directories exist | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.1.11'
        when:
            - not ubtu18cis_no_owner_adjust
            - ubtu18cis_6_1_11_no_user_items_flatten | length > 0

      - name: "AUTOMATED | 6.1.11 | PATCH | Ensure no unowned files or directories exist | Set unowned files/directories to configured owner"
        file:
            path: "{{ item }}"
            owner: "{{ ubtu18cis_unowned_owner }}"
        with_items:
            - "{{ ubtu18cis_6_1_11_no_user_items_flatten }}"
        when:
            - ubtu18cis_no_owner_adjust
            - ubtu18cis_6_1_11_no_user_items_flatten | length > 0
  when:
      - ubtu18cis_rule_6_1_11
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_6.1.11
      - permissions

- name: "AUTOMATED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist"
  block:
      - name: "AUTOMATED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist | Get ungrouped fiels or directories"
        shell: find {{ item.mount }} -xdev -nogroup
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_1_12_ungrouped_items
        with_items:
            - "{{ ansible_mounts }}"

      - name: "AUTOMATED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist | Flatten ungrouped_items results for easier use"
        set_fact:
            ubtu18cis_6_1_12_ungrouped_items_flatten: "{{ ubtu18cis_6_1_12_ungrouped_items.results | map(attribute='stdout_lines') | flatten }}"

      - name: "AUTOMATED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist | Alert on ungrouped files and directories"
        debug:
            msg:
                - "Warning!! You have ungrouped files/directories and are configured to not auto-remediate for this task"
                - "Please review the files/directories below and assign a group"
                - "{{ ubtu18cis_6_1_12_ungrouped_items_flatten }}"
        when:
            - not ubtu18cis_no_group_adjust
            - ubtu18cis_6_1_12_ungrouped_items_flatten | length > 0

      - name: "AUTOMATED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.1.12'
        when:
            - not ubtu18cis_no_group_adjust
            - ubtu18cis_6_1_12_ungrouped_items_flatten | length > 0

      - name: "AUTOMATED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist | Set ungrouped files/directories to configured group"
        file:
            path: "{{ item }}"
            group: "{{ ubtu18cis_ungrouped_group }}"
        with_items:
            - "{{ ubtu18cis_6_1_12_ungrouped_items_flatten }}"
        when:
            - ubtu18cis_no_group_adjust
            - ubtu18cis_6_1_12_ungrouped_items_flatten | length > 0
  when:
      - ubtu18cis_rule_6_1_12
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_6.1.12
      - permissions

- name: "MANUAL | 6.1.13 | AUDIT | Audit SUID executables"
  block:
      - name: "MANUAL | 6.1.13 | AUDIT | Audit SUID executables | Find SUID executables"
        # shell: df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type f -perm -4000
        shell: find {{ item.mount }} -xdev -type f -perm -4000
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_1_13_suid_executables
        with_items:
            - "{{ ansible_mounts }}"

      - name: "MANUAL | 6.1.13 | AUDIT | Audit SUID executables | Flatten suid_executables results for easier use"
        set_fact:
            ubtu18cis_6_1_13_suid_executables_flatten: "{{ ubtu18cis_6_1_13_suid_executables.results | map(attribute='stdout_lines') | flatten }}"

      - name: "MANUAL | 6.1.13 | AUDIT | Audit SUID executables | Alert SUID executables exist"
        debug:
            msg:
                - "Warning!! You have SUID executables"
                - "The files are listed below, please confirm the integrity of these binaries"
                - "{{ ubtu18cis_6_1_13_suid_executables_flatten }}"
        when:
            - ubtu18cis_6_1_13_suid_executables_flatten | length > 0
            - not ubtu18cis_suid_adjust

      - name: "MANUAL | 6.1.13 | AUDIT | Audit SUID executables | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.1.13'
        when:
            - ubtu18cis_6_1_13_suid_executables_flatten | length > 0
            - not ubtu18cis_suid_adjust

      - name: "MANUAL | 6.1.13 | PATCH | Audit SUID executables | Remove SUID bit"
        file:
            path: "{{ item }}"
            mode: 'u-s'
        with_items:
            - "{{ ubtu18cis_6_1_13_suid_executables_flatten }}"
        when:
            - ubtu18cis_suid_adjust
            - ubtu18cis_6_1_13_suid_executables_flatten | length > 0
  when:
      - ubtu18cis_rule_6_1_13
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_6.1.13
      - permissions

- name: "MANUAL | 6.1.14 | AUDIT | Audit SGID executables"
  block:
      - name: "MANUAL | 6.1.14 | PATCH | Audit SGID executables | Find SGID executables"
        shell: find {{ item }} -xdev -type f -perm -2000
        changed_when: false
        failed_when: false
        register: ubtu18cis_6_1_14_sgid_executables
        with_items:
            - "{{ ansible_mounts }}"

      - name: "MANUAL | 6.1.14 | AUDIT | Audit SGID executables | Flatten sgid_executables results for easier use"
        set_fact:
            ubtu18cis_6_1_14_sgid_executables_flatten: "{{ ubtu18cis_6_1_14_sgid_executables.results | map(attribute='stdout_lines') | flatten }}"

      - name: "MANUAL | 6.1.14 | AUDIT | Audit SGID executables | Alert SGID executables exist"
        debug:
            msg:
                - "Warning!! You have SGID executables"
                - "The files are listed below, please review the integrity of these binaries"
                - "{{ ubtu18cis_6_1_14_sgid_executables_flatten }}"
        when: ubtu18cis_6_1_14_sgid_executables_flatten | length > 0

      - name: "MANUAL | 6.1.14 | AUDIT | Audit SGID executables | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.1.14'
        when: ubtu18cis_6_1_14_sgid_executables_flatten | length > 0
  when:
      - ubtu18cis_rule_6_1_14
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_6.1.14
      - permissions
