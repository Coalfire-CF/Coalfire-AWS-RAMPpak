- name: Debug OS Family
  ansible.builtin.debug:
    var: ansible_facts['os_family']

- name: Debug distro
  ansible.builtin.debug:
    var: ansible_facts['distribution']

- name: Set platform/version specific variables
  ansible.builtin.include_vars: "{{ rolename_vars_file }}"
  loop:
    - "{{ ansible_facts['os_family'] }}.yml"
    - "{{ ansible_facts['distribution'] }}.yml"
    - "{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_major_version'] }}.yml"
    - "{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_version'] }}.yml"
  vars:
    rolename_vars_file: "{{ role_path }}/vars/{{ item }}"
  when: rolename_vars_file is file

# Note: Identifies existing volume, but currently only assumes that only one exists
- name: Identify PV name
  ansible.builtin.shell:
    cmd: pvs -o pv_name | grep /dev
  register: pv_name
  become: true
  changed_when: false

- name: Install LVM2
  ansible.builtin.package:
    name: lvm2
    state: present
  become: true

# Note: pvs parameter is required when resizing
- name: Extend Volume Group
  community.general.lvg:
    vg: disk2vg
    pvs:
      - "{{ pv_name.stdout | trim }}"
    pvresize: true
  become: true

- name: Resize Logical Volume
  community.general.lvol:
    vg: disk2vg
    lv: "{{ item.value.lv }}"
    size: "{{ item.value.size }}"
    resizefs: true
  become: true
  loop: "{{ lookup('dict', directories) }}"
